@model Product
@{
    ViewData["Title"] = Model.Name;
}

<div class="row">
    <div class="col-md-6">
        <img src="@Model.ImageUrl" class="img-fluid rounded" alt="@Model.Name">
    </div>
    <div class="col-md-6">
        <h1>@Model.Name</h1>
        <p>@Model.Description</p>

        <h3>Recipe Details</h3>
        <p>Yield: @Model.Recipe.YieldQuantity @Model.Recipe.YieldUnit</p>
        <p>Preparation Time: @Model.Recipe.PreparationTime minutes</p>

        <h4>Ingredients</h4>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Ingredient</th>
                    <th>Required</th>
                    <th>Available</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var ri in Model.Recipe.RecipeIngredients)
                {
                    var status = ri.Ingredient.CurrentStock >= ri.Quantity ? "Sufficient" : "Insufficient";
                    <tr>
                        <td>@ri.Ingredient.Name</td>
                        <td>@ri.Quantity @ri.Ingredient.UnitOfMeasure</td>
                        <td>@ri.Ingredient.CurrentStock @ri.Ingredient.UnitOfMeasure</td>
                        <td class="@(status == "Sufficient" ? "text-success" : "text-danger")">@status</td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="mt-4">
            <h4>Production Calculator</h4>
            <form id="productionForm">
                <div class="form-group">
                    <label for="desiredQuantity">Desired Quantity (@Model.Recipe.YieldUnit):</label>
                    <input type="number" class="form-control" id="desiredQuantity"
                           min="1" value="@Model.Recipe.YieldQuantity">
                </div>
                <button type="button" class="btn btn-primary" onclick="calculateRequirements()">
                    Calculate Requirements
                </button>
            </form>

            <div id="calculationResults" class="mt-3"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function calculateRequirements() {
            const desiredQ = document.getElementById('desiredQuantity').value;
            const desiredQuantity = parseFloat(desiredQ);
            const recipeId = @Model.Recipe.RecipeId;

            fetch(`/Production/CalculateRequirements?recipeId=${recipeId}&desiredQuantity=${desiredQuantity}`)
                .then(response => response.json())
                .then(data => {
                    let html = `<h5>Required Ingredients</h5><table class="table"><thead><tr>
                        <th>Ingredient</th><th>Required</th><th>Available</th><th>Status</th></tr></thead><tbody>`;

                    data.forEach(item => {
                        html += `<tr>
                            <td>${item.ingredientName}</td>
                            <td>${item.requiredAmount} ${item.unit}</td>
                            <td>${item.availableStock} ${item.unit}</td>
                            <td class="${item.status === 'Sufficient' ? 'text-success' : 'text-danger'}">
                                ${item.status}
                            </td>
                        </tr>`;
                    });

                    html += `</tbody></table>
                        <button class="btn btn-success" onclick="confirmProduction()">
                            Confirm Production
                        </button>`;

                    document.getElementById('calculationResults').innerHTML = html;
                });
        }

        function confirmProduction() {
            const desiredQuantity = document.getElementById('desiredQuantity').value;
            const recipeId = @Model.Recipe.RecipeId;

            const request = {
                recipeId: recipeId,
                desiredQuantity: parseFloat(desiredQuantity),
                notes: "Regular production batch"
            };

            fetch('/Production/ConfirmProduction', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(request)
            })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(err => { throw err; });
                }
                return response.json();
            })
            .then(data => {
                if (data && data.message) {
                    // Force a full page reload from server, not cache
                    window.location.reload(true);
                } else {
                    throw new Error(data?.error || 'Unknown error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert(`Failed to confirm production: ${error.message}`);
            });
        }    </script>
}